#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

console.log('üîê Firebase Environment Setup\n');

// Check if .env already exists
const envPath = path.join(process.cwd(), '.env');
if (fs.existsSync(envPath)) {
  console.log('‚ö†Ô∏è  .env file already exists!');
  rl.question('Do you want to overwrite it? (y/N): ', (answer) => {
    if (answer.toLowerCase() === 'y' || answer.toLowerCase() === 'yes') {
      setupEnvironment();
    } else {
      console.log('Setup cancelled.');
      rl.close();
    }
  });
} else {
  setupEnvironment();
}

function setupEnvironment() {
  console.log('\nüìù Please provide your Firebase configuration:\n');
  
  const questions = [
    { key: 'FIREBASE_API_KEY', label: 'Firebase API Key' },
    { key: 'FIREBASE_AUTH_DOMAIN', label: 'Firebase Auth Domain (your_project.firebaseapp.com)' },
    { key: 'FIREBASE_PROJECT_ID', label: 'Firebase Project ID' },
    { key: 'FIREBASE_STORAGE_BUCKET', label: 'Firebase Storage Bucket (your_project.appspot.com)' },
    { key: 'FIREBASE_MESSAGING_SENDER_ID', label: 'Firebase Messaging Sender ID' },
    { key: 'FIREBASE_APP_ID', label: 'Firebase App ID' },
    { key: 'FIREBASE_MEASUREMENT_ID', label: 'Firebase Measurement ID (optional)' },
    { key: 'GOOGLE_OAUTH_CLIENT_ID', label: 'Google OAuth Client ID (from Google Cloud Console)' }
  ];

  const envVars = {};
  let currentQuestion = 0;

  function askQuestion() {
    if (currentQuestion >= questions.length) {
      writeEnvFile();
      return;
    }

    const question = questions[currentQuestion];
    rl.question(`${question.label}: `, (answer) => {
      if (answer.trim()) {
        envVars[question.key] = answer.trim();
      }
      currentQuestion++;
      askQuestion();
    });
  }

  function writeEnvFile() {
    let envContent = '# Firebase Configuration\n';
    envContent += '# Generated by setup-env.js\n\n';
    
    Object.entries(envVars).forEach(([key, value]) => {
      envContent += `${key}=${value}\n`;
    });
    
    envContent += '\n# App Configuration\n';
    envContent += 'APP_ENV=production\n';
    envContent += 'EXPO_PUBLIC_APP_NAME=Nutrilytics\n';

    try {
      fs.writeFileSync(envPath, envContent);
      console.log('\n‚úÖ .env file created successfully!');
      console.log('üîí Your Firebase credentials are now securely stored.');
      console.log('\nüìã Next steps:');
      console.log('1. Update eas.json with the same credentials');
      console.log('2. Run: npm run build:aab');
      console.log('3. Submit AAB to Play Store');
    } catch (error) {
      console.error('‚ùå Error creating .env file:', error.message);
    }
    
    rl.close();
  }

  askQuestion();
} 